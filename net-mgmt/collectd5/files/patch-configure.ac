--- configure.ac.orig	2017-01-23 07:53:57 UTC
+++ configure.ac
@@ -185,7 +185,7 @@ then
 fi
 
 # Where to install .pc files.
-pkgconfigdir="${libdir}/pkgconfig"
+pkgconfigdir="${prefix}/libdata/pkgconfig"
 AC_SUBST(pkgconfigdir)
 
 # Check for standards compliance mode
@@ -876,7 +876,7 @@ SAVE_CFLAGS="$CFLAGS"
 # Emulate behavior of src/Makefile.am
 if test "x$GCC" = "xyes"
 then
-	CFLAGS="$CFLAGS -Wall -Werror"
+	CFLAGS="$CFLAGS -Wall "
 fi
 
 AC_CACHE_CHECK([for strtok_r],
@@ -1003,7 +1003,7 @@ AC_CHECK_FUNCS(getutxent, [have_getutxen
 if test "x$GCC" = "xyes"
 then
 	SAVE_CFLAGS="$CFLAGS"
-	CFLAGS="$CFLAGS -Wall -Wextra -Werror"
+	CFLAGS="$CFLAGS -Wall -Wextra "
 fi
 
 AC_CHECK_FUNCS(strptime, [have_strptime="yes"], [have_strptime="no"])
@@ -1831,6 +1831,7 @@ if test "x$with_kstat" = "xyes"
 then
 	AC_CHECK_LIB(kstat, kstat_open, [with_kstat="yes"], [with_kstat="no (libkstat not found)"], [])
 fi
+
 if test "x$with_kstat" = "xyes"
 then
 	AC_CHECK_LIB(devinfo, di_init, [with_devinfo="yes"], [with_devinfo="no (not found)"], [])
@@ -1840,6 +1841,8 @@ if test "x$with_kstat" = "xyes"
 then
 	AC_DEFINE(HAVE_LIBKSTAT, 1,
 		  [Define to 1 if you have the 'kstat' library (-lkstat)])
+	BUILD_WITH_LIBKSTAT_LIBS="-lkstat"
+	AC_SUBST(BUILD_WITH_LIBKSTAT_LIBS)
 fi
 AM_CONDITIONAL(BUILD_WITH_LIBKSTAT, test "x$with_kstat" = "xyes")
 AM_CONDITIONAL(BUILD_WITH_LIBDEVINFO, test "x$with_devinfo" = "xyes")
@@ -3225,8 +3228,8 @@ AC_ARG_WITH(libmongoc, [AS_HELP_STRING([
 	 with_libmongoc="no"
  else
 	 with_libmongoc="yes"
-	 LIBMONGOC_CPPFLAGS="$LIBMONGOC_CPPFLAGS -I$withval/include"
-	 LIBMONGOC_LDFLAGS="$LIBMONGOC_LDFLAGS -L$withval/lib"
+	 LIBMONGOC_CPPFLAGS="$LIBMONGOC_CPPFLAGS -I$withval/include/libmongoc-1.0 -I$withval/include/libbson-1.0"
+	 LIBMONGOC_LDFLAGS="$LIBMONGOC_LDFLAGS -L$withval/lib -lsasl2 -lssl -lcrypto  -lmongoc-1.0 -lbson-1.0"
  fi; fi
 ],
 [with_libmongoc="yes"])
@@ -3243,7 +3246,7 @@ then
 	then
 		AC_MSG_NOTICE([libmongoc CPPFLAGS: $LIBMONGOC_CPPFLAGS])
 	fi
-	AC_CHECK_HEADERS(mongo.h,
+	AC_CHECK_HEADERS(mongoc.h,
 	[with_libmongoc="yes"],
 	[with_libmongoc="no ('mongo.h' not found)"],
 [#if HAVE_STDINT_H
@@ -3259,7 +3262,7 @@ then
 	then
 		AC_MSG_NOTICE([libmongoc LDFLAGS: $LIBMONGOC_LDFLAGS])
 	fi
-	AC_CHECK_LIB(mongoc, mongo_run_command,
+	AC_CHECK_LIB(mongoc-1.0, mongoc_client_command,
 	[with_libmongoc="yes"],
 	[with_libmongoc="no (symbol 'mongo_run_command' not found)"])
 fi
@@ -4045,7 +4048,7 @@ then
 	SAVE_LIBS="$LIBS"
 	# trigger an error if Perl_load_module*() uses __attribute__nonnull__(3)
 	# (see issues #41 and #42)
-	CFLAGS="$CFLAGS $PERL_CFLAGS -Wall -Werror"
+	CFLAGS="$CFLAGS $PERL_CFLAGS -Wall "
 	LIBS="$LIBS $PERL_LIBS"
 
 	AC_CACHE_CHECK([for broken Perl_load_module()],
@@ -5407,6 +5410,137 @@ fi
 AM_CONDITIONAL(BUILD_WITH_LIBYAJL, test "x$with_libyajl" = "xyes")
 # }}}
 
+# --with-libdtrace {{{
+with_libdtrace_cppflags=""
+with_libdtrace_ldflags=""
+AC_ARG_WITH(libdtrace, [AS_HELP_STRING([--with-libdtrace@<:@=PREFIX@:>@], [Path to libdtrace. ])],
+[
+	if test "x$withval" = "xyes"
+	then
+		with_libdtrace_cppflags="\
+-I /usr/src/cddl/compat/opensolaris/include \
+-I /usr/src/cddl/contrib/opensolaris/lib/libdtrace/common \
+-I /usr/src/sys/cddl/compat/opensolaris \
+-I /usr/src/sys/cddl/contrib/opensolaris/uts/common \
+"
+		with_libdtrace_ldflags="-ldtrace"
+		with_libdtrace="yes"
+	else
+		with_libdtrace="no"
+	fi
+],
+[
+	with_libdtrace="no"
+])
+if test "x$with_libdtrace" = "xyes"
+then
+	SAVE_CPPFLAGS="$CPPFLAGS"
+	SAVE_LDFLAGS="$LDFLAGS"
+
+	CPPFLAGS="$CPPFLAGS $with_libdtrace_cppflags"
+	LDFLAGS="$LDFLAGS $with_libdtrace_ldflags"
+
+	AC_CHECK_LIB(dtrace, dtrace_open,
+	[
+		AC_DEFINE(HAVE_LIBDTRACE, 1, [Define to 1 if you have the dtrace library (-ldtrace).])
+	], [with_libdtrace="no (libdtrace not found)"])
+
+	CPPFLAGS="$SAVE_CPPFLAGS"
+	LDFLAGS="$SAVE_LDFLAGS"
+fi
+if test "x$with_libdtrace" = "xyes"
+then
+	SAVE_CPPFLAGS="$CPPFLAGS"
+	CPPFLAGS="$CPPFLAGS $with_libdtrace_cppflags"
+
+	AC_CHECK_HEADERS(dtrace.h,
+	[
+		AC_DEFINE(HAVE_LIBDTRACE_H, 1, [Define to 1 if you have the <libdtrace.h> header file.])
+	], [with_libdtrace="no (dtrace.h not found)"])
+
+	CPPFLAGS="$SAVE_CPPFLAGS"
+fi
+if test "x$with_libdtrace" = "xyes"
+then
+	BUILD_WITH_LIBDTRACE_CPPFLAGS="$with_libdtrace_cppflags"
+	BUILD_WITH_LIBDTRACE_LDFLAGS="$with_libdtrace_ldflags"
+	AC_SUBST(BUILD_WITH_LIBDTRACE_CPPFLAGS)
+	AC_SUBST(BUILD_WITH_LIBDTRACE_LDFLAGS)
+fi
+AM_CONDITIONAL(BUILD_WITH_LIBDTRACE, test "x$with_libdtrace" = "xyes")
+# }}}
+
+# --with-libzfs {{{
+with_libzfs_cppflags=""
+with_libzfs_ldflags=""
+AC_ARG_WITH(libzfs, [AS_HELP_STRING([--with-libzfs@<:@=PREFIX@:>@], [Path to libzfs.])],
+[
+	if test "x$withval" = "xyes"
+	then
+		with_libzfs_cppflags="\
+-DNEED_SOLARIS_BOOLEAN=1 \
+-I /usr/src/cddl/contrib/opensolaris/lib/libzpool/common \
+-I /usr/src/cddl/compat/opensolaris/include \
+-I /usr/src/cddl/compat/opensolaris/lib/libumem \
+-I /usr/src/sys/cddl/compat/opensolaris \
+-I /usr/src/cddl/contrib/opensolaris/head \
+-I /usr/src/cddl/contrib/opensolaris/lib/libuutil/common \
+-I /usr/src/cddl/contrib/opensolaris/lib/libzfs/common \
+-I /usr/src/cddl/contrib/opensolaris/lib/libzfs_core/common \
+-I /usr/src/cddl/contrib/opensolaris/lib/libumem/common \
+-I /usr/src/cddl/contrib/opensolaris/lib/libnvpair \
+-I /usr/src/sys/cddl/contrib/opensolaris/uts/common \
+-I /usr/src/sys/cddl/contrib/opensolaris/uts/common/fs/zfs \
+-I /usr/src/sys/cddl/contrib/opensolaris/uts/common/sys \
+-I /usr/src/sys/cddl/contrib/opensolaris/common/zfs \
+"
+		with_libzfs_ldflags="-lgeom -luutil -lzfs_core -lzfs"
+		with_libzfs="yes"
+	else
+		with_libzfs="no"
+	fi
+],
+[
+	with_libzfs="no"
+])
+if test "x$with_libzfs" = "xyes"
+then
+	SAVE_CPPFLAGS="$CPPFLAGS"
+	SAVE_LDFLAGS="$LDFLAGS"
+
+	CPPFLAGS="$CPPFLAGS $with_libzfs_cppflags"
+	LDFLAGS="$LDFLAGS $with_libzfs_ldflags"
+
+	AC_CHECK_LIB(zfs, libzfs_init,
+	[
+		AC_DEFINE(HAVE_LIBZFS, 1, [Define to 1 if you have the zfs library (-lzfs).])
+	], [with_libzfs="no (libzfs not found)"])
+
+	CPPFLAGS="$SAVE_CPPFLAGS"
+	LDFLAGS="$SAVE_LDFLAGS"
+fi
+if test "x$with_libzfs" = "xyes"
+then
+	SAVE_CPPFLAGS="$CPPFLAGS"
+	CPPFLAGS="$CPPFLAGS $with_libzfs_cppflags"
+
+	AC_CHECK_HEADERS(libzfs.h,
+	[
+		AC_DEFINE(HAVE_LIBZFS_H, 1, [Define to 1 if you have the <libzfs.h> header file.])
+	], [with_libzfs="no (libzfs.h not found)"])
+
+	CPPFLAGS="$SAVE_CPPFLAGS"
+fi
+if test "x$with_libzfs" = "xyes"
+then
+	BUILD_WITH_LIBZFS_CPPFLAGS="$with_libzfs_cppflags"
+	BUILD_WITH_LIBZFS_LDFLAGS="$with_libzfs_ldflags"
+	AC_SUBST(BUILD_WITH_LIBZFS_CPPFLAGS)
+	AC_SUBST(BUILD_WITH_LIBZFS_LDFLAGS)
+fi
+AM_CONDITIONAL(BUILD_WITH_LIBZFS, test "x$with_libzfs" = "xyes")
+# }}}
+
 # --with-mic {{{
 with_mic_cflags="-I/opt/intel/mic/sysmgmt/sdk/include"
 with_mic_ldpath="-L/opt/intel/mic/sysmgmt/sdk/lib/Linux"
@@ -5479,8 +5613,8 @@ AC_ARG_WITH(libvarnish, [AS_HELP_STRING(
 	else if test -d "$with_libvarnish/lib"
 	then
 		AC_MSG_NOTICE([Not checking for libvarnish: Manually configured])
-		with_libvarnish_cflags="-I$withval/include"
-		with_libvarnish_libs="-L$withval/lib -lvarnishapi"
+		with_libvarnish_cflags="-I$withval/include/varnish"
+		with_libvarnish_libs="-L$withval/lib/varnish -lvarnishapi"
 		with_libvarnish="yes"
 	fi; fi; fi
 ],
@@ -5912,7 +6046,7 @@ collectd features:])
 AC_COLLECTD([debug],     [enable],  [feature], [debugging])
 AC_COLLECTD([daemon],    [disable], [feature], [daemon mode])
 AC_COLLECTD([getifaddrs],[enable],  [feature], [getifaddrs under Linux])
-AC_COLLECTD([werror],    [disable], [feature], [building with -Werror])
+AC_COLLECTD([werror],    [disable], [feature], [building with ])
 
 dependency_warning="no"
 dependency_error="no"
@@ -5930,6 +6064,7 @@ plugin_cpufreq="no"
 plugin_cpusleep="no"
 plugin_curl_json="no"
 plugin_curl_xml="no"
+plugin_clt="no"
 plugin_df="no"
 plugin_disk="no"
 plugin_drbd="no"
@@ -5938,6 +6073,7 @@ plugin_entropy="no"
 plugin_ethstat="no"
 plugin_fhcount="no"
 plugin_fscache="no"
+plugin_geom_stat="no"
 plugin_gps="no"
 plugin_grpc="no"
 plugin_hugepages="no"
@@ -5951,6 +6087,7 @@ plugin_log_logstash="no"
 plugin_memory="no"
 plugin_multimeter="no"
 plugin_nfs="no"
+plugin_nfsstat="no"
 plugin_numa="no"
 plugin_perl="no"
 plugin_pinba="no"
@@ -5974,6 +6111,7 @@ plugin_wireless="no"
 plugin_write_prometheus="no"
 plugin_xencpu="no"
 plugin_zfs_arc="no"
+plugin_zfs_arc_v2="no"
 plugin_zone="no"
 plugin_zookeeper="no"
 
@@ -6059,8 +6197,12 @@ fi
 
 if test "x$ac_system" = "xFreeBSD"
 then
+	plugin_ctl="yes"
 	plugin_disk="yes"
+	plugin_geom_stat="yes"
+	plugin_nfsstat="yes"
 	plugin_zfs_arc="yes"
+	plugin_zfs_arc_v2="yes"
 fi
 
 
@@ -6088,6 +6230,7 @@ then
 	plugin_processes="yes"
 	plugin_uptime="yes"
 	plugin_zfs_arc="yes"
+	plugin_zfs_arc_v2="yes"
 	plugin_zone="yes"
 fi
 
@@ -6387,10 +6530,12 @@ AC_PLUGIN([contextswitch],       [$plugi
 AC_PLUGIN([cpu],                 [$plugin_cpu],             [CPU usage statistics])
 AC_PLUGIN([cpufreq],             [$plugin_cpufreq],         [CPU frequency statistics])
 AC_PLUGIN([cpusleep],            [$plugin_cpusleep],        [CPU sleep statistics])
+AC_PLUGIN([cputemp],             [yes],                     [CPU temperature statistics])
 AC_PLUGIN([csv],                 [yes],                     [CSV output plugin])
 AC_PLUGIN([curl],                [$with_libcurl],           [CURL generic web statistics])
 AC_PLUGIN([curl_json],           [$plugin_curl_json],       [CouchDB statistics])
 AC_PLUGIN([curl_xml],            [$plugin_curl_xml],        [CURL generic xml statistics])
+AC_PLUGIN([ctl],                 [$plugin_ctl],             [CAM target layer statistics])
 AC_PLUGIN([dbi],                 [$with_libdbi],            [General database statistics])
 AC_PLUGIN([df],                  [$plugin_df],              [Filesystem usage statistics])
 AC_PLUGIN([disk],                [$plugin_disk],            [Disk usage statistics])
@@ -6404,6 +6549,7 @@ AC_PLUGIN([exec],                [yes], 
 AC_PLUGIN([fhcount],             [$plugin_fhcount],         [File handles statistics])
 AC_PLUGIN([filecount],           [yes],                     [Count files in directories])
 AC_PLUGIN([fscache],             [$plugin_fscache],         [fscache statistics])
+AC_PLUGIN([geom_stat],           [$plugin_geom_stat],       [FreeBSD GEOM statistics])
 AC_PLUGIN([gmond],               [$with_libganglia],        [Ganglia plugin])
 AC_PLUGIN([gps],                 [$plugin_gps],             [GPS plugin])
 AC_PLUGIN([grpc],                [$plugin_grpc],            [gRPC plugin])
@@ -6443,6 +6589,7 @@ AC_PLUGIN([netapp],              [$with_
 AC_PLUGIN([netlink],             [$with_libmnl],            [Enhanced Linux network statistics])
 AC_PLUGIN([network],             [yes],                     [Network communication plugin])
 AC_PLUGIN([nfs],                 [$plugin_nfs],             [NFS statistics])
+AC_PLUGIN([nfsstat],             [$plugin_nfsstat],    [FreeBSD NFS statistics])
 AC_PLUGIN([nginx],               [$with_libcurl],           [nginx statistics])
 AC_PLUGIN([notify_desktop],      [$with_libnotify],         [Desktop notifications])
 AC_PLUGIN([notify_email],        [$with_libesmtp],          [Email notifier])
@@ -6515,6 +6662,7 @@ AC_PLUGIN([write_tsdb],          [yes], 
 AC_PLUGIN([xencpu],              [$plugin_xencpu],          [Xen Host CPU usage])
 AC_PLUGIN([xmms],                [$with_libxmms],           [XMMS statistics])
 AC_PLUGIN([zfs_arc],             [$plugin_zfs_arc],         [ZFS ARC statistics])
+AC_PLUGIN([zfs_arc_v2],          [$plugin_zfs_arc_v2],      [ZFS ARC statistics, improved v2])
 AC_PLUGIN([zone],                [$plugin_zone],            [Solaris container statistics])
 AC_PLUGIN([zookeeper],           [yes],                     [Zookeeper statistics])
 
@@ -6683,8 +6831,8 @@ AM_CFLAGS="-Wall"
 AM_CXXFLAGS="-Wall"
 if test "x$enable_werror" != "xno"
 then
-        AM_CFLAGS="$AM_CFLAGS -Werror"
-        AM_CXXFLAGS="$AM_CXXFLAGS -Werror"
+        AM_CFLAGS="$AM_CFLAGS "
+        AM_CXXFLAGS="$AM_CXXFLAGS "
 fi
 AC_SUBST([AM_CFLAGS])
 AC_SUBST([AM_CXXFLAGS])
@@ -6794,6 +6942,7 @@ AC_MSG_RESULT([    libxenctrl  . . . . .
 AC_MSG_RESULT([    libxml2 . . . . . . . $with_libxml2])
 AC_MSG_RESULT([    libxmms . . . . . . . $with_libxmms])
 AC_MSG_RESULT([    libyajl . . . . . . . $with_libyajl])
+AC_MSG_RESULT([    libzfs  . . . . . . . $with_libzfs])
 AC_MSG_RESULT([    oracle  . . . . . . . $with_oracle])
 AC_MSG_RESULT([    protobuf-c  . . . . . $have_protoc_c])
 AC_MSG_RESULT([    protoc 3  . . . . . . $have_protoc3])
@@ -6825,6 +6974,7 @@ AC_MSG_RESULT([    cpu . . . . . . . . .
 AC_MSG_RESULT([    cpufreq . . . . . . . $enable_cpufreq])
 AC_MSG_RESULT([    cpusleep  . . . . . . $enable_cpusleep])
 AC_MSG_RESULT([    csv . . . . . . . . . $enable_csv])
+AC_MSG_RESULT([    ctl . . . . . . . . . $enable_ctl])
 AC_MSG_RESULT([    curl  . . . . . . . . $enable_curl])
 AC_MSG_RESULT([    curl_json . . . . . . $enable_curl_json])
 AC_MSG_RESULT([    curl_xml  . . . . . . $enable_curl_xml])
@@ -6841,6 +6991,7 @@ AC_MSG_RESULT([    exec  . . . . . . . .
 AC_MSG_RESULT([    fhcount . . . . . . . $enable_fhcount])
 AC_MSG_RESULT([    filecount . . . . . . $enable_filecount])
 AC_MSG_RESULT([    fscache . . . . . . . $enable_fscache])
+AC_MSG_RESULT([    geom_stat . . . . . . $enable_geom_stat])
 AC_MSG_RESULT([    gmond . . . . . . . . $enable_gmond])
 AC_MSG_RESULT([    gps . . . . . . . . . $enable_gps])
 AC_MSG_RESULT([    grpc  . . . . . . . . $enable_grpc])
@@ -6880,6 +7031,7 @@ AC_MSG_RESULT([    netapp  . . . . . . .
 AC_MSG_RESULT([    netlink . . . . . . . $enable_netlink])
 AC_MSG_RESULT([    network . . . . . . . $enable_network])
 AC_MSG_RESULT([    nfs . . . . . . . . . $enable_nfs])
+AC_MSG_RESULT([    nfsstat . . . . . . . $enable_nfsstat])
 AC_MSG_RESULT([    nginx . . . . . . . . $enable_nginx])
 AC_MSG_RESULT([    notify_desktop  . . . $enable_notify_desktop])
 AC_MSG_RESULT([    notify_email  . . . . $enable_notify_email])
@@ -6951,6 +7103,7 @@ AC_MSG_RESULT([    write_tsdb  . . . . .
 AC_MSG_RESULT([    xencpu  . . . . . . . $enable_xencpu])
 AC_MSG_RESULT([    xmms  . . . . . . . . $enable_xmms])
 AC_MSG_RESULT([    zfs_arc . . . . . . . $enable_zfs_arc])
+AC_MSG_RESULT([    zfs_arc_v2  . . . . . $enable_zfs_arc_v2])
 AC_MSG_RESULT([    zone  . . . . . . . . $enable_zone])
 AC_MSG_RESULT([    zookeeper . . . . . . $enable_zookeeper])
 AC_MSG_RESULT()
